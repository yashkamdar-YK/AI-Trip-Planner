
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import useLocationSearch from '../hook/useLocationSearch';

function CreatTrip() {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    location: '',
    days: 1,
    budget: 'moderate',
    travelPartner: 'alone',
  });
  const [locationQuery, setLocationQuery] = useState('');
  const { locations, isLoading } = useLocationSearch(locationQuery);

  const handleSubmit = async (e) => {
    e.preventDefault();
    // Store form data in localStorage for the next page
    localStorage.setItem('tripFormData', JSON.stringify(formData));
    console.log(formData);
    
    navigate('/your-trip');
  };

  return (
    <div className="max-w-md mx-auto mt-24  bg-white rounded-xl shadow-md overflow-hidden p-6">
      <h2 className="text-2xl font-bold mb-6">Plan Your Trip</h2>
      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label className="block text-sm font-medium text-gray-700">Destination</label>
          <input
            type="text"
            value={locationQuery}
            onChange={(e) => setLocationQuery(e.target.value)}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
            placeholder="Enter destination"
          />
          {isLoading ? (
            <div>Loading...</div>
          ) : (
            <ul className="mt-1 max-h-40 overflow-auto border rounded-md">
              {locations.map((location) => (
                <li
                  key={location.place_id}
                  className="p-2 hover:bg-gray-100 cursor-pointer"
                  onClick={() => {
                    setFormData({ ...formData, location: location.display_name });
                    setLocationQuery(location.display_name);
                  }}
                >
                  {location.display_name}
                </li>
              ))}
            </ul>
          )}
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700">Number of Days</label>
          <input
            type="number"
            min="1"
            value={formData.days}
            onChange={(e) => setFormData({ ...formData, days: e.target.value })}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700">Budget</label>
          <select
            value={formData.budget}
            onChange={(e) => setFormData({ ...formData, budget: e.target.value })}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          >
            <option value="cheap">Budget Friendly</option>
            <option value="moderate">Moderate</option>
            <option value="luxury">Luxury</option>
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700">Travel Partner</label>
          <select
            value={formData.travelPartner}
            onChange={(e) => setFormData({ ...formData, travelPartner: e.target.value })}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          >
            <option value="alone">Solo Travel</option>
            <option value="friends">With Friends</option>
            <option value="family">Family Trip</option>
            <option value="partner">With Partner</option>
          </select>
        </div>

        <button
          type="submit"
          className="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          Plan My Trip
        </button>
      </form>
    </div>
  );
}

export default CreatTrip;
